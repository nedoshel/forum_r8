class CreateCommentsJob < ApplicationJob
  queue_as :default

  def perform(*args)
    text = 'говорить с ней на выдуманном мной языке. Она ненавидит языки, которые я придумываю! Единственный язык, на котором мы оба говорим, кроме английского, — это свиная латынь. Думаю, вы и так это знали. Что угодно. Думаю, на этом я пока ост
ановлюсь. Пока! Привет, я вернулся. Я собираюсь внести свой вклад в эту гигантскую стену текста, которая скоро появится. Я только что понял, что у меня на кровати лежит гигантская плюшевая лягушка. Я забыл её имя. Но я почти уверен, что это было что-то глуп
ое. Кажется, это было «FROG» азбукой Морзе или что-то в этом роде. Азбука Морзе — это круто. Я немного разбираюсь в этом, но не очень хорошо. Я также не очень хорошо разбираюсь во французском. Я почти ничего не знаю по-французски, и моё произношение, наверн
ое, ужасает. Но я, по крайней мере, его учу. Я также учу эсперанто. Это язык, который был придуман одним человеком много лет назад как «универсальный язык». На нём говорит много людей. Я такой фанат языков. Половина этого текста, наверное, будет посвящена я
зыкам. Но, эй, главное, чтобы он был длинным! Ха, понял? ГЛАВНОЕ, чтобы он был ДЛИННЫМ? Я такой забавный, да? Нет, не так. Наверное, мне стоит немного поспать. Спокойной ночи! Привет, я снова здесь. Сейчас меня интересуют только два вещи: языки и фурри. Что
? О, прости, я думал, ты знаешь, что я фурри. Ха-ха, упс. В любом случае, да, я фурри, но, поскольку я молодой фурри, я не могу делать в фандоме столько, сколько мне хотелось бы. Когда я стану старше, я бы хотел носить костюм из меха, ходить на фурри-конвен
ты и всё такое. Но пока я могу только мечтать об этом.'.split(' ')

    users = User.all.to_a
    posts = Post.all.to_a
    comment_ids = Comment.select(:id).map(&:id)

    create_bulk_comments(users, posts, comment_ids, text)
  end

  private 

  def create_bulk_comments(users, posts, comment_ids, text)
    10.times do 
      comments = 5_000.times.map do 
        { 
          user_id: users.sample.id, 
          post_id: posts.sample.id,
          comment_id: [ nil, comment_ids.sample].sample,
          content: text.sample(50).join(' ') 
        } 
      end

      res = Comment.insert_all(comments)
      comment_ids += res.rows.flatten
    end
  end
end
